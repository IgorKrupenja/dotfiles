#!/bin/bash

################################# Getting active app   

myApp=$(
    osascript <<EOT
	tell application "System Events"
    	set activeApp to name of first application process whose frontmost is true
	end tell
EOT
)

################################# getting current dark mode state

# Need this for settting dark mode manually in some apps
isDarkModeOn=$(
    osascript <<EOT
	tell application id "com.apple.systemevents"
		tell appearance preferences
			set isDarkModeOn to dark mode
		end tell
	end tell
EOT
)

################################# macOS dark mode

osascript -e '
	tell application id "com.apple.systemevents"
		tell appearance preferences
			if dark mode is true then
				set dark mode to false
			else
				set dark mode to true
			end if
		end tell
	end tell
	'

################################# Chrome

# Requires: Dark Reader plugin

# Will only work if Chrome is already running
# Dark Reader using global shortcut
osascript -e '
  tell application "System Events"
	  keystroke "d" using {control down, shift down}
  end tell
'

################################# Marta

if grep -q "theme \"Igor\"" /Users/igor/Library/Application\ Support/org.yanex.marta/conf.marco; then
    sed -i '' 's/theme "Igor"/theme "Classic"/g' /Users/igor/Library/Application\ Support/org.yanex.marta/conf.marco
else
    sed -i '' 's/theme "Classic"/theme "Igor"/g' /Users/igor/Library/Application\ Support/org.yanex.marta/conf.marco
fi

################################# PDF Expert

if [ "$isDarkModeOn" = true ]; then
    osascript -e '
		if application "PDF Expert" is running then
    		tell application "PDF Expert" to activate
			tell application "System Events"
				keystroke "z" using {option down, command down}
			end tell
		end if
		'
else
    osascript -e '
		if application "PDF Expert" is running then
    		tell application "PDF Expert" to activate
			tell application "System Events"
				keystroke "n" using {option down, command down}
			end tell
		end if
		'
fi

################################# IntelliJ IDEA

# Uses a hacky approach with sending keystrokes from AppleScript
# Will only work if IntelliJ IDEA is already running
if [ "$isDarkModeOn" = false ]; then
    osascript -e '
		if application "IntelliJ IDEA" is running then
		    tell application "IntelliJ IDEA" to activate
			tell application "System Events"
				keystroke "`" using {control down}
				keystroke "5"
				delay 0.4
				keystroke "2"
			end tell
		end if
		'
else
    osascript -e '
		if application "IntelliJ IDEA" is running then
		  tell application "IntelliJ IDEA" to activate
			tell application "System Events"
				keystroke "`" using {control down}
				keystroke "5"
				delay 0.4
				keystroke "1"
			end tell
		end if
		'
fi

################################# VSCode

if grep -q "\"workbench.colorTheme\": \"Flat White\"" /Users/igor/Library/Application\ Support/Code/User/settings.json; then
	# theme
    sed -i '' 's/"workbench.colorTheme": "Flat White"/"workbench.colorTheme": "Material Theme Darker"/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    # Colours for bracket highlighting
	sed -i '' 's/#a2462e/#82AAFF/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/#7a3e9d/#C792EA/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/#4384b9/#F78C6C/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
	# To do highlighting
    sed -i '' 's/#ff5100/#f08c66/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/"opacity": 50/"opacity": 100/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
	# LaTeX PDF preview 
	sed -i '' 's/"latex-workshop.view.pdf.invert": 0,/"latex-workshop.view.pdf.invert": 0.9,/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
else
	# theme
    sed -i '' 's/"workbench.colorTheme": "Material Theme Darker"/"workbench.colorTheme": "Flat White"/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    # Colours for bracket highlighting
	sed -i '' 's/#82AAFF/#a2462e/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/#C792EA/#7a3e9d/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/#F78C6C/#4384b9/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
	# To do highlighting
	sed -i '' 's/#f08c66/#ff5100/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
    sed -i '' 's/"opacity": 100/"opacity": 50/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
	# LaTeX PDF preview 
	sed -i '' 's/"latex-workshop.view.pdf.invert": 0.9,/"latex-workshop.view.pdf.invert": 0,/g' /Users/igor/Library/Application\ Support/Code/User/settings.json
fi

################################# Sublime Merge

if grep -q "Merge.sublime-theme" /Users/igor/Library/Application\ Support/Sublime\ Merge/Packages/User/Preferences.sublime-settings; then
    sed -i '' 's/Merge.sublime-theme/Merge Dark.sublime-theme/g' /Users/igor/Library/Application\ Support/Sublime\ Merge/Packages/User/Preferences.sublime-settings
else
    sed -i '' 's/Merge Dark.sublime-theme/Merge.sublime-theme/g' /Users/igor/Library/Application\ Support/Sublime\ Merge/Packages/User/Preferences.sublime-settings
fi

################################# cht.sh

if grep -q "style=lovelace" /Users/igor/.cht.sh/cht.sh.conf; then
    sed -i '' 's/style=lovelace/style=paraiso-dark/g' /Users/igor/.cht.sh/cht.sh.conf
else
    sed -i '' 's/style=paraiso-dark/style=lovelace/g' /Users/igor/.cht.sh/cht.sh.conf
fi

################################# Mailspring

# # Quit Mailspring
# osascript -e 'quit app "Mailspring.app"'
# sleep 1

# # theme change
# if grep -q "\"theme\": \"ui-light\"" /Users/igor/Library/Application\ Support/Mailspring/config.json; then
#     sed -i '' 's/"theme": "ui-light"/"theme": "ui-dark"/g' /Users/igor/Library/Application\ Support/Mailspring/config.json
# else
#     sed -i '' 's/"theme": "ui-dark"/"theme": "ui-light"/g' /Users/igor/Library/Application\ Support/Mailspring/config.json
# fi

# # reopen Mailspring
# open -a /Applications/Mailspring.app -g --args --background

################################# Restore active app

# reading app name from variable and restoring window
osascript -e 'on run {activeApp}' -e 'tell application activeApp to activate' -e 'end run' "$myApp"
