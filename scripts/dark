#!/bin/bash

# Cannot be run on Linux
case "$OSTYPE" in
linux*)
	echo "ERROR: Script does not support Linux!"
	exit 1
	;;
esac

################################# change macOS theme

osascript -e '
	tell application "System Events"
		tell appearance preferences
			set dark mode to not dark mode
		end tell
	end tell
'

################################# variable for other apps

# define variable if need to set dark theme in other apps
# 2>/dev/null to suppress error if dark mode is off
if [[ $(defaults read -g AppleInterfaceStyle 2>/dev/null) == "Dark" ]]; then
	set_dark=true
fi

################################# Marta

conf=$HOME/Library/Application\ Support/org.yanex.marta/conf.marco

if [ "$set_dark" = true ]; then
	sed -i '' -e 's/theme "Classic"/theme "Igor"/g' "$conf"
else
	sed -i '' -e 's/theme "Igor"/theme "Classic"/g' "$conf"
fi

################################# PDF Expert

if [[ $(pgrep "PDF Expert") ]]; then
	if [ "$set_dark" = true ]; then
		osascript -e '
    		tell application "PDF Expert" to activate
				tell application "System Events"
					keystroke "n" using {option down, command down}
				end tell
			'
	else
		osascript -e '
    		tell application "PDF Expert" to activate
				tell application "System Events"
					keystroke "z" using {option down, command down}
				end tell
			'
	fi
fi

################################# JetBrains IDEs

# Uses a hacky approach with sending keystrokes from AppleScript
# Will only work if IDEs are already running

ides=("pycharm" "intellij")

for ide in "${ides[@]}"; do
	if [[ $(pgrep $ide) ]]; then
		if [ "$set_dark" = true ]; then
			osascript <<EOF
		  tell application "$ide" to activate
			tell application "System Events"
				keystroke "\`" using {control down}
				keystroke "5"
				delay 0.4
				keystroke "4"
			end tell
EOF
		else
			osascript <<EOF
		  tell application "$ide" to activate
			tell application "System Events"
				keystroke "\`" using {control down}
				keystroke "5"
				delay 0.4
				keystroke "1"
				delay 0.4
				keystroke "\`" using {control down}
				keystroke "1"
				delay 0.6
				keystroke "3"
			end tell
EOF
		fi
	fi
done

################################# VSCode

json=$HOME/Library/Application\ Support/Code/User/settings.json

light_values=(
	'"workbench.colorTheme": "Night Owl Light (No Italics)"'
	# Colours for bracket highlighting
	'"#0c969b", "#4876d6", "#994cc3"'
	# To do highlighting
	'"opacity": "10"'
	# To do highlighting and git graph
	'#d6438a'
	# git graph
	'#de3d3b' '#08916a' '#E0AF02' '#288ed7' '#49d0c5' '#994cc3' '#403f53'
	# Highlight matching tag
	'"underline": "#0c969b"'
	# Draw.io
	'"hediet.vscode-drawio.theme": "Kennedy"'
)
dark_values=(
	'"workbench.colorTheme": "Nord"'
	# Colours for bracket highlighting
	'"#83A2C2", "#91BDBC", "#b48ead"'
	# To do highlighting
	'"opacity": "20"'
	# To do highlighting and git graph
	'#b48ead'
	# git graph
	'#bf616a' '#a3be8c' '#ebcb8b' '#81a1c1' '#88c0d0' '#e5e9f0' '#4c566a'
	# Highlight matching tag
	'"underline": "#b58faf"'
	# Draw.io
	'"hediet.vscode-drawio.theme": "dark"'
)

for i in ${!light_values[@]}; do
	if [ "$set_dark" = true ]; then
		# Night Owl Light -> Nord
		sed -i '' "s/${light_values[i]}/${dark_values[i]}/g" "$json"
	else
		# Nord -> Night Owl Light
		sed -i '' "s/${dark_values[i]}/${light_values[i]}/g" "$json"
	fi
done

################################# Sublime Merge

sett=$HOME/Library/Application\ Support/Sublime\ Merge/Packages/User/Preferences.sublime-settings

if [ "$set_dark" = true ]; then
	sed -i '' 's/Merge.sublime-theme/Merge Dark.sublime-theme/g' "$sett"
else
	sed -i '' 's/Merge Dark.sublime-theme/Merge.sublime-theme/g' "$sett"
fi

################################# cht.sh

conf=$HOME/.cht.sh/cht.sh.conf

if [ "$set_dark" = true ]; then
	sed -i '' 's/style=lovelace/style=paraiso-dark/g' $conf
else
	sed -i '' 's/style=paraiso-dark/style=lovelace/g' $conf
fi

################################# Toggl-cli

conf=$HOME/.togglrc

if [ "$set_dark" = true ]; then
	sed -i '' 's/light/dark/g' $conf
else
	sed -i '' 's/dark/light/g' $conf
fi
