#!/bin/bash

#################################################################################
# Dark: Switch between system dark and light modes on macOS
# and manually switch between dark and light themes in some apps.
#################################################################################

# prevent running not on macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
  echo "Dark mode script only supports macOS, exiting."
  exit
fi

################################# macOS dark mode

osascript -e '
	tell application "System Events"
		tell appearance preferences
			set dark mode to not dark mode
		end tell
	end tell
'

################################# variable for other apps

# define variable if changing light -> dark
# 2>/dev/null to suppress error if changing dark -> light
if [[ $(defaults read -g AppleInterfaceStyle 2>/dev/null) == "Dark" ]]; then
  set_dark=true
fi

################################# Marta

conf=$HOME/Library/Application\ Support/org.yanex.marta/conf.marco

if [ "$set_dark" = true ]; then
  sed -i '' -e 's/theme "Classic"/theme "Igor"/g' "$conf"
else
  sed -i '' -e 's/theme "Igor"/theme "Classic"/g' "$conf"
fi

################################# PDF Expert

if [[ $(pgrep "PDF Expert") ]]; then
  if [ "$set_dark" = true ]; then
    osascript -e '
    		tell application "PDF Expert" to activate
				tell application "System Events"
					keystroke "n" using {option down, command down}
				end tell
			'
  else
    osascript -e '
    		tell application "PDF Expert" to activate
				tell application "System Events"
					keystroke "z" using {option down, command down}
				end tell
			'
  fi
fi

################################# VSCode

conf=$HOME/Library/Application\ Support/Code/User/settings.json

light_values=(
  # To do highlighting
  '"opacity": "10"'
  # To do highlighting and git graph
  '#d6438a'
  # git graph
  '#de3d3b' '#08916a' '#E0AF02' '#288ed7' '#49d0c5' '#994cc3' '#403f53'
  # Highlight matching tag
  '"underline": "#0c969b"'
  # Draw.io
  '"hediet.vscode-drawio.theme": "Kennedy"'
)
dark_values=(
  # To do highlighting
  '"opacity": "20"'
  # To do highlighting and git graph
  '#b48ead'
  # git graph
  '#bf616a' '#a3be8c' '#ebcb8b' '#81a1c1' '#88c0d0' '#e5e9f0' '#4c566a'
  # Highlight matching tag
  '"underline": "#b58faf"'
  # Draw.io
  '"hediet.vscode-drawio.theme": "dark"'
)

for i in "${!light_values[@]}"; do
  if [ "$set_dark" = true ]; then
    # light ->  dark
    sed -i '' "s/${light_values[i]}/${dark_values[i]}/g" "$conf"
  else
    # dark -> light
    sed -i '' "s/${dark_values[i]}/${light_values[i]}/g" "$conf"
  fi
done

################################# Sublime Merge

conf=$HOME/Library/Application\ Support/Sublime\ Merge/Packages/User/Preferences.sublime-settings

if [ "$set_dark" = true ]; then
  sed -i '' 's/Merge.sublime-theme/Merge Dark.sublime-theme/g' "$conf"
else
  sed -i '' 's/Merge Dark.sublime-theme/Merge.sublime-theme/g' "$conf"
fi

################################# cht.sh

conf=$HOME/.cht.sh/cht.sh.conf

if [ "$set_dark" = true ]; then
  sed -i '' 's/style=lovelace/style=paraiso-dark/g' "$conf"
else
  sed -i '' 's/style=paraiso-dark/style=lovelace/g' "$conf"
fi

################################# toggl-cli

conf=$HOME/.togglrc

if [ "$set_dark" = true ]; then
  sed -i '' 's/light/dark/g' "$conf"
else
  sed -i '' 's/dark/light/g' "$conf"
fi

################################# Switch back to iTerm

osascript -e 'tell application "iTerm" to activate'
