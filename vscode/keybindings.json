// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+escape",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k cmd+v",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "cmd+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "workbench.action.editor.changeLanguageMode"
  },
  {
    "key": "cmd+k m",
    "command": "-workbench.action.editor.changeLanguageMode"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+k cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "alt+cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "cmd+s",
    "command": "searchEditorApplyChanges.apply",
    "when": "inSearchEditor"
  },
  {
    "key": "cmd+l cmd+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "editor.emmet.action.wrapIndividualLinesWithAbbreviation"
  },
  {
    "key": "ctrl+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "cmd+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "alt+q",
    "command": "-extension.jumpy-enter",
    "when": "editorTextFocus && !jumpy.isInJumpMode"
  },
  {
    "key": "ctrl+z",
    "command": "flutter.selectDevice"
  },
  {
    "key": "alt+enter",
    "command": "-abracadabra.quickFix",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.debug.selectandstart",
    "when": "!inDebugMode"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+s",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": ["postcssSorting.execute", "workbench.action.files.save"]
    }
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "alt+cmd+o",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+cmd+o",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder"
  },
  {
    "key": "alt+cmd+o",
    "command": "workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-colonize.hold",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+enter",
    "command": "-colonize.newline",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "command": "-colonize.endline",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.view.extension.dockerView"
  },
  {
    "key": "cmd+enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+enter",
    "command": "colonize.endline"
  },
  {
    "key": "shift+alt+cmd+w",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "delete",
    "command": "-workbench.action.terminal.killInstance",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "cmd+backspace",
    "command": "-workbench.action.terminal.killInstance",
    "when": "terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace",
    "command": "-deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace",
    "command": "notebook.cell.delete",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-notebook.cell.delete",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  {
    "key": "cmd+backspace",
    "command": "-debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  {
    "key": "cmd+backspace",
    "command": "debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "key": "cmd+backspace",
    "command": "-debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "key": "cmd+backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "notification.clear",
    "when": "notificationFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-notification.clear",
    "when": "notificationFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "remote.tunnel.closeInline",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "-remote.tunnel.closeInline",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "cmd+backspace",
    "command": "-search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "tab",
    "command": "markdown.extension.onTabKey",
    "when": "editorTextFocus && !inlineSuggestionVisible && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+a",
    "command": "extension.aceJump.multiChar"
  }
]
